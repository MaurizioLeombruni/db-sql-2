//JOIN

	1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT COUNT(*) AS Numero_Studenti
FROM students
JOIN degrees ON degrees.id = students.degree_id
WHERE degrees.id = 53;

	2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT degrees.name, degrees.level, degrees.email, degrees.website, departments.name
FROM degrees
JOIN departments ON degrees.department_id = departments.id
WHERE departments.id = 7;

	3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT courses.id, courses.degree_id, courses.name, courses.description, courses.period, courses.year, courses.cfu, courses.website
FROM course_teacher
JOIN courses ON courses.id = course_teacher.course_id
JOIN teachers ON teachers.id = course_teacher.teacher_id
WHERE teachers.id = 44

	4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
	relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT students.surname, students.name, students.date_of_birth, students.fiscal_code, students.enrolment_date,
	students.registration_number, students.email, degrees.name AS Student_Degree, departments.name AS Student_Department
FROM students
JOIN degrees ON degrees.id = students.degree_id
JOIN departments ON departments.id = degrees.department_id
ORDER BY students.surname, students.name;

	5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT degrees.name AS Nome_Corso, courses.name AS Nome_Materia, teachers.surname AS Cognome_Professore,
	teachers.name AS Nome_Professore, courses.description, courses.period, courses.year, courses.cfu
FROM degrees
JOIN courses ON courses.degree_id = degrees.id
JOIN course_teacher ON course_teacher.course_id = courses.id
JOIN teachers ON teachers.id = course_teacher.teacher_id;

	6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT COUNT(DISTINCT teacher_id) AS Numero_Insegnanti_DIP_Matematica
FROM teachers
JOIN course_teacher ON course_teacher.teacher_id = teachers.id
JOIN courses ON courses.id = course_teacher.course_id
JOIN degrees ON degrees.id = courses.degree_id
JOIN departments ON departments.id = degrees.department_id
WHERE departments.id = 5;

	7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
	superare ciascuno dei suoi esami

SELECT students.name, students.surname, exams.course_id, COUNT(exam_student.vote) AS Numero_Tentativi
FROM exam_student
JOIN exams ON exams.id = exam_student.exam_id
JOIN students ON students.id = exam_student.student_id
WHERE exam_student.vote < 18
GROUP BY students.id, students.surname, students.name, exams.course_id;

// GROUP BY

	1. Contare quanti iscritti ci sono stati ogni anno

SELECT YEAR(enrolment_date) AS Anno, COUNT(DISTINCT id) AS Numero_Iscritti
FROM students
GROUP BY YEAR(enrolment_date)
ORDER BY YEAR(enrolment_date) DESC;

	2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT office_address, COUNT(office_address) AS Numero_Insegnanti
FROM teachers
GROUP BY office_address;

	3. Calcolare la media dei voti di ogni appello d'esame

SELECT exam_id, AVG(vote) AS Media_Voti
FROM exam_student
GROUP BY exam_id
ORDER BY exam_id;

	4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT departments.name, COUNT(*) AS Numero_Corsi
FROM degrees
JOIN departments ON departments.id = degrees.department_id
GROUP BY departments.name;